[gd_resource type="ShaderMaterial" load_steps=3 format=2]

[sub_resource type="VisualShaderNodeExpression" id=3]
size = Vector2( 330, 199 )
expression = "color = vec3(0,0,0)"

[sub_resource type="VisualShader" id=4]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;




void vertex() {
// Output:0

}

void fragment() {
// Expression:2
	vec3 n_out2p0;
	n_out2p0 = vec3(0.0, 0.0, 0.0);
	{
		n_out2p0 = vec3(0,0,0)
	}

// Output:0
	ALBEDO = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -382.656, -24.5417 )
nodes/fragment/0/position = Vector2( 400, 100 )
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( 0, 200 )
nodes/fragment/2/size = Vector2( 330, 199 )
nodes/fragment/2/input_ports = ""
nodes/fragment/2/output_ports = "0,1,color;"
nodes/fragment/2/expression = "color = vec3(0,0,0)"
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0 )

[resource]
shader = SubResource( 4 )
